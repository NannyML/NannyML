import pandas as pd
import pytest

from nannyml.datasets import (
    load_synthetic_binary_classification_dataset,
    load_synthetic_multiclass_classification_dataset,
)
from nannyml.performance_estimation.confidence_based import CBPE


@pytest.mark.parametrize(
    'calculator_opts, expected',
    [
        (
            {'chunk_size': 20000},
            pd.DataFrame(
                {
                    'key': ['[0:19999]', '[20000:49999]'],
                    'estimated_roc_auc': [0.9690827692140925, 0.9627722759203226],
                    'estimated_f1': [0.9479079222515973, 0.9278089207836576],
                    'estimated_precision': [0.9436121782324026, 0.9197836255005452],
                    'estimated_recall': [0.9522429574319092, 0.9359754933378336],
                    'estimated_specificity': [0.9434949869571513, 0.9123732942949082],
                    'estimated_accuracy': [0.9478536003143163, 0.9245926106862006],
                }
            ),
        ),
        (
            {'chunk_size': 20000, 'timestamp_column_name': 'timestamp'},
            pd.DataFrame(
                {
                    'key': ['[0:19999]', '[20000:49999]'],
                    'estimated_roc_auc': [0.9690827692140925, 0.9627722759203226],
                    'estimated_f1': [0.9479079222515973, 0.9278089207836576],
                    'estimated_precision': [0.9436121782324026, 0.9197836255005452],
                    'estimated_recall': [0.9522429574319092, 0.9359754933378336],
                    'estimated_specificity': [0.9434949869571513, 0.9123732942949082],
                    'estimated_accuracy': [0.9478536003143163, 0.9245926106862006],
                }
            ),
        ),
        (
            {'chunk_number': 4},
            pd.DataFrame(
                {
                    'key': ['[0:12499]', '[12500:24999]', '[25000:37499]', '[37500:49999]'],
                    'estimated_roc_auc': [
                        0.9690496133543502,
                        0.9690315182120458,
                        0.9607404611197395,
                        0.9611281635643135,
                    ],
                    'estimated_f1': [0.9478220802546018, 0.9483683062849226, 0.9235839411719146, 0.9239534478264141],
                    'estimated_precision': [
                        0.9432817252782693,
                        0.9446550044048795,
                        0.9145613073300847,
                        0.915231419744167,
                    ],
                    'estimated_recall': [0.9524063553647716, 0.9521109162736728, 0.9327863750020324, 0.932843314818147],
                    'estimated_specificity': [
                        0.9426505776503413,
                        0.9446298328855539,
                        0.9050174893945843,
                        0.9065202406788675,
                    ],
                    'estimated_accuracy': [
                        0.9475319773956268,
                        0.9483565214666658,
                        0.9194997180834459,
                        0.920199809204049,
                    ],
                }
            ),
        ),
        (
            {'chunk_number': 4, 'timestamp_column_name': 'timestamp'},
            pd.DataFrame(
                {
                    'key': ['[0:12499]', '[12500:24999]', '[25000:37499]', '[37500:49999]'],
                    'estimated_roc_auc': [
                        0.9690496133543502,
                        0.9690315182120458,
                        0.9607404611197395,
                        0.9611281635643135,
                    ],
                    'estimated_f1': [0.9478220802546018, 0.9483683062849226, 0.9235839411719146, 0.9239534478264141],
                    'estimated_precision': [
                        0.9432817252782693,
                        0.9446550044048795,
                        0.9145613073300847,
                        0.915231419744167,
                    ],
                    'estimated_recall': [0.9524063553647716, 0.9521109162736728, 0.9327863750020324, 0.932843314818147],
                    'estimated_specificity': [
                        0.9426505776503413,
                        0.9446298328855539,
                        0.9050174893945843,
                        0.9065202406788675,
                    ],
                    'estimated_accuracy': [
                        0.9475319773956268,
                        0.9483565214666658,
                        0.9194997180834459,
                        0.920199809204049,
                    ],
                }
            ),
        ),
        (
            {'chunk_period': 'Y', 'timestamp_column_name': 'timestamp'},
            pd.DataFrame(
                {
                    'key': ['2017', '2018', '2019', '2020', '2021'],
                    'estimated_roc_auc': [
                        0.9686251180452822,
                        0.9691860189228905,
                        0.9643157928165687,
                        0.9610299125179039,
                        0.8947719335229752,
                    ],
                    'estimated_f1': [
                        0.9486231864324036,
                        0.9477092734637503,
                        0.9315900332119164,
                        0.9240488520044474,
                        0.7926388251111386,
                    ],
                    'estimated_precision': [
                        0.9425338528308135,
                        0.9440235151260787,
                        0.9244858823267199,
                        0.9151737753536913,
                        0.7100248791165871,
                    ],
                    'estimated_recall': [
                        0.9547917131585199,
                        0.9514239252802291,
                        0.9388042123614001,
                        0.9330977499034733,
                        0.8970090514396291,
                    ],
                    'estimated_specificity': [
                        0.937163050852636,
                        0.9454556899788352,
                        0.918667486315966,
                        0.9060337870230502,
                        0.8302703490347314,
                    ],
                    'estimated_accuracy': [
                        0.9463140395517069,
                        0.9483894898124492,
                        0.9290320609580357,
                        0.9201265813431901,
                        0.8514010785547443,
                    ],
                }
            ),
        ),
        (
            {},
            pd.DataFrame(
                {
                    'key': [
                        '[0:4999]',
                        '[5000:9999]',
                        '[10000:14999]',
                        '[15000:19999]',
                        '[20000:24999]',
                        '[25000:29999]',
                        '[30000:34999]',
                        '[35000:39999]',
                        '[40000:44999]',
                        '[45000:49999]',
                    ],
                    'estimated_roc_auc': [
                        0.9686306166809373,
                        0.9690438435474089,
                        0.9694438261961335,
                        0.9690472634498744,
                        0.9688726952274674,
                        0.960478016244988,
                        0.9611336210051199,
                        0.9605358219511105,
                        0.9618691204348024,
                        0.9605366452565602,
                    ],
                    'estimated_f1': [
                        0.948555321454138,
                        0.9465779465209089,
                        0.9488069354531159,
                        0.9476546805658866,
                        0.9488338110572719,
                        0.9232325655782327,
                        0.923595783273164,
                        0.9229020961475524,
                        0.9241722368115827,
                        0.9249152193013231,
                    ],
                    'estimated_precision': [
                        0.9425440716307568,
                        0.9431073537123396,
                        0.9442277523749669,
                        0.9446336452028188,
                        0.9453707449594683,
                        0.9148732952385749,
                        0.9143489884377147,
                        0.9133821290777778,
                        0.9173539177641505,
                        0.9145726617897999,
                    ],
                    'estimated_recall': [
                        0.9546437391537488,
                        0.95007417692678,
                        0.9534307499357034,
                        0.9506951010870748,
                        0.9523223421280594,
                        0.9317460031975845,
                        0.9330315141543621,
                        0.9326226021419973,
                        0.9310926704269641,
                        0.9354943725540698,
                    ],
                    'estimated_specificity': [
                        0.9372742491954283,
                        0.9446319110387503,
                        0.9458015988378999,
                        0.9459382667254527,
                        0.9442380077839293,
                        0.9054074470674046,
                        0.9054733303403276,
                        0.905142438988179,
                        0.9120143191041326,
                        0.9005790635739856,
                    ],
                    'estimated_accuracy': [
                        0.9462845122805443,
                        0.947306078326665,
                        0.949543087716159,
                        0.9482807229338969,
                        0.9483068458984663,
                        0.9191503008524827,
                        0.9197921095331023,
                        0.9193633916092473,
                        0.9217811573797979,
                        0.9191618588441066,
                    ],
                }
            ),
        ),
        (
            {'timestamp_column_name': 'timestamp'},
            pd.DataFrame(
                {
                    'key': [
                        '[0:4999]',
                        '[5000:9999]',
                        '[10000:14999]',
                        '[15000:19999]',
                        '[20000:24999]',
                        '[25000:29999]',
                        '[30000:34999]',
                        '[35000:39999]',
                        '[40000:44999]',
                        '[45000:49999]',
                    ],
                    'estimated_roc_auc': [
                        0.9686306166809373,
                        0.9690438435474089,
                        0.9694438261961335,
                        0.9690472634498744,
                        0.9688726952274674,
                        0.960478016244988,
                        0.9611336210051199,
                        0.9605358219511105,
                        0.9618691204348024,
                        0.9605366452565602,
                    ],
                    'estimated_f1': [
                        0.948555321454138,
                        0.9465779465209089,
                        0.9488069354531159,
                        0.9476546805658866,
                        0.9488338110572719,
                        0.9232325655782327,
                        0.923595783273164,
                        0.9229020961475524,
                        0.9241722368115827,
                        0.9249152193013231,
                    ],
                    'estimated_precision': [
                        0.9425440716307568,
                        0.9431073537123396,
                        0.9442277523749669,
                        0.9446336452028188,
                        0.9453707449594683,
                        0.9148732952385749,
                        0.9143489884377147,
                        0.9133821290777778,
                        0.9173539177641505,
                        0.9145726617897999,
                    ],
                    'estimated_recall': [
                        0.9546437391537488,
                        0.95007417692678,
                        0.9534307499357034,
                        0.9506951010870748,
                        0.9523223421280594,
                        0.9317460031975845,
                        0.9330315141543621,
                        0.9326226021419973,
                        0.9310926704269641,
                        0.9354943725540698,
                    ],
                    'estimated_specificity': [
                        0.9372742491954283,
                        0.9446319110387503,
                        0.9458015988378999,
                        0.9459382667254527,
                        0.9442380077839293,
                        0.9054074470674046,
                        0.9054733303403276,
                        0.905142438988179,
                        0.9120143191041326,
                        0.9005790635739856,
                    ],
                    'estimated_accuracy': [
                        0.9462845122805443,
                        0.947306078326665,
                        0.949543087716159,
                        0.9482807229338969,
                        0.9483068458984663,
                        0.9191503008524827,
                        0.9197921095331023,
                        0.9193633916092473,
                        0.9217811573797979,
                        0.9191618588441066,
                    ],
                }
            ),
        ),
    ],
    ids=[
        'size_based_without_timestamp',
        'size_based_with_timestamp',
        'count_based_without_timestamp',
        'count_based_with_timestamp',
        'period_based_with_timestamp',
        'default_without_timestamp',
        'default_with_timestamp',
    ],
)
def test_cbpe_for_binary_classification_with_timestamps(calculator_opts, expected):
    ref_df, ana_df, _ = load_synthetic_binary_classification_dataset()
    cbpe = CBPE(
        y_pred_proba='y_pred_proba',
        y_pred='y_pred',
        y_true='work_home_actual',
        problem_type='classification_binary',
        metrics=['roc_auc', 'f1', 'precision', 'recall', 'specificity', 'accuracy'],
        **calculator_opts,
    ).fit(ref_df)
    result = cbpe.estimate(ana_df)
    sut = result.filter(period='analysis').to_df()[
        [('chunk', 'key')] + [(m.column_name, 'value') for m in result.metrics]
    ]
    sut.columns = [
        'key',
        'estimated_roc_auc',
        'estimated_f1',
        'estimated_precision',
        'estimated_recall',
        'estimated_specificity',
        'estimated_accuracy',
    ]

    pd.testing.assert_frame_equal(expected, sut)


@pytest.mark.parametrize(
    'calculator_opts, expected',
    [
        (
            {'chunk_size': 20000},
            pd.DataFrame(
                {
                    'key': ['[0:19999]', '[20000:39999]', '[40000:59999]'],
                    'estimated_roc_auc': [0.9092377595865466, 0.8683877226653395, 0.8204766170638091],
                    'estimated_f1': [0.756401608336434, 0.6937135623882767, 0.632386421613214],
                    'estimated_precision': [0.7564437378390059, 0.694174192229447, 0.6336288859123612],
                    'estimated_recall': [0.7564129287764665, 0.6934788458355289, 0.6319310599943714],
                    'estimated_specificity': [0.8782068281303994, 0.8469556750949159, 0.8172644220189141],
                    'estimated_accuracy': [0.7564451493123628, 0.6946947603445697, 0.6378557309960986],
                }
            ),
        ),
        (
            {'chunk_size': 20000, 'timestamp_column_name': 'timestamp'},
            pd.DataFrame(
                {
                    'key': ['[0:19999]', '[20000:39999]', '[40000:59999]'],
                    'estimated_roc_auc': [0.9092377595865466, 0.8683877226653395, 0.8204766170638091],
                    'estimated_f1': [0.756401608336434, 0.6937135623882767, 0.632386421613214],
                    'estimated_precision': [0.7564437378390059, 0.694174192229447, 0.6336288859123612],
                    'estimated_recall': [0.7564129287764665, 0.6934788458355289, 0.6319310599943714],
                    'estimated_specificity': [0.8782068281303994, 0.8469556750949159, 0.8172644220189141],
                    'estimated_accuracy': [0.7564451493123628, 0.6946947603445697, 0.6378557309960986],
                }
            ),
        ),
        (
            {'chunk_number': 4},
            pd.DataFrame(
                {
                    'key': ['[0:14999]', '[15000:29999]', '[30000:44999]', '[45000:59999]'],
                    'estimated_roc_auc': [
                        0.9085083182636969,
                        0.9088360564807361,
                        0.8196861857675541,
                        0.8203213219880933,
                    ],
                    'estimated_f1': [0.7550059244451006, 0.7562711250144366, 0.63091155676697, 0.6324244687112559],
                    'estimated_precision': [
                        0.755038246904623,
                        0.7562647262876293,
                        0.6323547131368327,
                        0.6335323150520741,
                    ],
                    'estimated_recall': [
                        0.7550277340784216,
                        0.7562926950204228,
                        0.6304009454574501,
                        0.6320155112489632,
                    ],
                    'estimated_specificity': [
                        0.8775094795233379,
                        0.8781429133214084,
                        0.8165537125162895,
                        0.8172408983542975,
                    ],
                    'estimated_accuracy': [
                        0.7550428613792668,
                        0.7562888217426292,
                        0.6364205304514962,
                        0.6375753072973162,
                    ],
                }
            ),
        ),
        (
            {'chunk_number': 4, 'timestamp_column_name': 'timestamp'},
            pd.DataFrame(
                {
                    'key': ['[0:14999]', '[15000:29999]', '[30000:44999]', '[45000:59999]'],
                    'estimated_roc_auc': [
                        0.9085083182636969,
                        0.9088360564807361,
                        0.8196861857675541,
                        0.8203213219880933,
                    ],
                    'estimated_f1': [0.7550059244451006, 0.7562711250144366, 0.63091155676697, 0.6324244687112559],
                    'estimated_precision': [
                        0.755038246904623,
                        0.7562647262876293,
                        0.6323547131368327,
                        0.6335323150520741,
                    ],
                    'estimated_recall': [
                        0.7550277340784216,
                        0.7562926950204228,
                        0.6304009454574501,
                        0.6320155112489632,
                    ],
                    'estimated_specificity': [
                        0.8775094795233379,
                        0.8781429133214084,
                        0.8165537125162895,
                        0.8172408983542975,
                    ],
                    'estimated_accuracy': [
                        0.7550428613792668,
                        0.7562888217426292,
                        0.6364205304514962,
                        0.6375753072973162,
                    ],
                }
            ),
        ),
        (
            {'chunk_period': 'Y', 'timestamp_column_name': 'timestamp'},
            pd.DataFrame(
                {
                    'key': ['2020', '2021'],
                    'estimated_roc_auc': [0.8698976466237168, 0.8161798350988554],
                    'estimated_f1': [0.6959459683194374, 0.6271637037915178],
                    'estimated_precision': [0.696279612597813, 0.6275707355339551],
                    'estimated_recall': [0.6957620347508907, 0.6272720458900231],
                    'estimated_specificity': [0.8480220572478717, 0.8145095377877009],
                    'estimated_accuracy': [0.6967957612985849, 0.6305270354546132],
                }
            ),
        ),
        (
            {},
            pd.DataFrame(
                {
                    'key': [
                        '[0:5999]',
                        '[6000:11999]',
                        '[12000:17999]',
                        '[18000:23999]',
                        '[24000:29999]',
                        '[30000:35999]',
                        '[36000:41999]',
                        '[42000:47999]',
                        '[48000:53999]',
                        '[54000:59999]',
                    ],
                    'estimated_roc_auc': [
                        0.9070370295881952,
                        0.9099482873688786,
                        0.909958298321231,
                        0.9091054631936624,
                        0.9071886074481345,
                        0.8195150939735344,
                        0.8202573402661897,
                        0.819127271546289,
                        0.81940620684774,
                        0.8215839856335078,
                    ],
                    'estimated_f1': [
                        0.7533014808638749,
                        0.7564216285126095,
                        0.7581655498090148,
                        0.7565574256686872,
                        0.7536178781761181,
                        0.6309845876312757,
                        0.6314817817562323,
                        0.6305520915509012,
                        0.6317356567785939,
                        0.6334434546737131,
                    ],
                    'estimated_precision': [
                        0.7533705392643878,
                        0.7564117249294325,
                        0.758189598004742,
                        0.7565615847700302,
                        0.7536066338250612,
                        0.6320478731185537,
                        0.632902872215884,
                        0.6320206664159113,
                        0.6327414423931249,
                        0.6349486020523588,
                    ],
                    'estimated_recall': [
                        0.7532927299604006,
                        0.756484874870973,
                        0.7581945446990431,
                        0.7565540393358208,
                        0.7536741378197004,
                        0.6306782567019867,
                        0.6308507454911164,
                        0.6299485723087591,
                        0.6315005643336115,
                        0.6328910840233342,
                    ],
                    'estimated_specificity': [
                        0.876648985916452,
                        0.8781935469456502,
                        0.87910164279675,
                        0.8783467614315459,
                        0.8767972368373717,
                        0.816629841587921,
                        0.8166384221108975,
                        0.8163342736347389,
                        0.8167795549189886,
                        0.8180293638991758,
                    ],
                    'estimated_accuracy': [
                        0.7533903547412437,
                        0.7564140260171383,
                        0.7582062911442542,
                        0.7566888307842633,
                        0.7536297051178407,
                        0.6358257165904244,
                        0.6366025073789935,
                        0.6367168031955528,
                        0.6365172577468735,
                        0.6393273094601863,
                    ],
                }
            ),
        ),
        (
            {'timestamp_column_name': 'timestamp'},
            pd.DataFrame(
                {
                    'key': [
                        '[0:5999]',
                        '[6000:11999]',
                        '[12000:17999]',
                        '[18000:23999]',
                        '[24000:29999]',
                        '[30000:35999]',
                        '[36000:41999]',
                        '[42000:47999]',
                        '[48000:53999]',
                        '[54000:59999]',
                    ],
                    'estimated_roc_auc': [
                        0.9070370295881952,
                        0.9099482873688786,
                        0.909958298321231,
                        0.9091054631936624,
                        0.9071886074481345,
                        0.8195150939735344,
                        0.8202573402661897,
                        0.819127271546289,
                        0.81940620684774,
                        0.8215839856335078,
                    ],
                    'estimated_f1': [
                        0.7533014808638749,
                        0.7564216285126095,
                        0.7581655498090148,
                        0.7565574256686872,
                        0.7536178781761181,
                        0.6309845876312757,
                        0.6314817817562323,
                        0.6305520915509012,
                        0.6317356567785939,
                        0.6334434546737131,
                    ],
                    'estimated_precision': [
                        0.7533705392643878,
                        0.7564117249294325,
                        0.758189598004742,
                        0.7565615847700302,
                        0.7536066338250612,
                        0.6320478731185537,
                        0.632902872215884,
                        0.6320206664159113,
                        0.6327414423931249,
                        0.6349486020523588,
                    ],
                    'estimated_recall': [
                        0.7532927299604006,
                        0.756484874870973,
                        0.7581945446990431,
                        0.7565540393358208,
                        0.7536741378197004,
                        0.6306782567019867,
                        0.6308507454911164,
                        0.6299485723087591,
                        0.6315005643336115,
                        0.6328910840233342,
                    ],
                    'estimated_specificity': [
                        0.876648985916452,
                        0.8781935469456502,
                        0.87910164279675,
                        0.8783467614315459,
                        0.8767972368373717,
                        0.816629841587921,
                        0.8166384221108975,
                        0.8163342736347389,
                        0.8167795549189886,
                        0.8180293638991758,
                    ],
                    'estimated_accuracy': [
                        0.7533903547412437,
                        0.7564140260171383,
                        0.7582062911442542,
                        0.7566888307842633,
                        0.7536297051178407,
                        0.6358257165904244,
                        0.6366025073789935,
                        0.6367168031955528,
                        0.6365172577468735,
                        0.6393273094601863,
                    ],
                }
            ),
        ),
    ],
    ids=[
        'size_based_without_timestamp',
        'size_based_with_timestamp',
        'count_based_without_timestamp',
        'count_based_with_timestamp',
        'period_based_with_timestamp',
        'default_without_timestamp',
        'default_with_timestamp',
    ],
)
def test_cbpe_for_multiclass_classification_with_timestamps(calculator_opts, expected):
    ref_df, ana_df, _ = load_synthetic_multiclass_classification_dataset()
    cbpe = CBPE(
        y_pred_proba={
            'upmarket_card': 'y_pred_proba_upmarket_card',
            'highstreet_card': 'y_pred_proba_highstreet_card',
            'prepaid_card': 'y_pred_proba_prepaid_card',
        },
        y_pred='y_pred',
        y_true='y_true',
        problem_type='classification_multiclass',
        metrics=['roc_auc', 'f1', 'precision', 'recall', 'specificity', 'accuracy'],
        **calculator_opts,
    ).fit(ref_df)
    result = cbpe.estimate(ana_df)
    sut = result.filter(period='analysis').to_df()[
        [('chunk', 'key')] + [(m.column_name, 'value') for m in result.metrics]
    ]
    sut.columns = [
        'key',
        'estimated_roc_auc',
        'estimated_f1',
        'estimated_precision',
        'estimated_recall',
        'estimated_specificity',
        'estimated_accuracy',
    ]

    pd.testing.assert_frame_equal(expected, sut)
