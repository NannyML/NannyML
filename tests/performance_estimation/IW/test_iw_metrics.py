import pandas as pd
import pytest

from nannyml.chunk import DefaultChunker
from nannyml.datasets import (
    load_synthetic_car_loan_dataset,
    load_synthetic_multiclass_classification_dataset,
)
from nannyml.performance_estimation.importance_weighting import IW
# from nannyml.performance_estimation.importance_weighting.metrics import (
#     BinaryClassificationAccuracy,
#     BinaryClassificationAUROC,
#     BinaryClassificationConfusionMatrix,
#     BinaryClassificationF1,
#     BinaryClassificationPrecision,
#     BinaryClassificationRecall,
#     BinaryClassificationSpecificity,
# )
# from nannyml.thresholds import ConstantThreshold


@pytest.mark.parametrize(
    'calculator_opts, expected',
    [
        (
            {
                'normalize_confusion_matrix': None,
                'business_value_matrix': [[2, -5], [-10, 10]],
                'normalize_business_value': None,
            },
            pd.DataFrame(
                {
                    'key': ['[0:4999]', '[5000:9999]', '[10000:14999]', '[0:4999]', '[5000:9999]'],
                    'estimated_roc_auc': [0.972845, 0.971718, 0.972491, 0.972685, 0.971584],
                    'estimated_f1': [0.941566, 0.940875, 0.945742, 0.937973, 0.938716],
                    # 'estimated_precision': [0.9436121782324026, 0.9197836255005452],
                    # 'estimated_recall': [0.9522429574319092, 0.9359754933378336],
                    # 'estimated_specificity': [0.9434949869571513, 0.9123732942949082],
                    'estimated_accuracy': [0.943561, 0.943081, 0.945556, 0.939350, 0.937436],
                    # 'estimated_true_positive': [9488.96406430504, 14537.180201036117],
                    # 'estimated_true_negative': [9468.107941981285, 13200.5981195499],
                    # 'estimated_false_positive': [567.0359356949585, 1267.8197989638852],
                    # 'estimated_false_negative': [475.8920580187156, 994.4018804500995],
                    # 'estimated_business_value': [106231.75626835103, 155489.88045014057],
                }
            ),
        ),
    ],
    ids=[
        'size_based_without_timestamp_cm_normalization_none_business_norm_none',
    ],
)
def test_iw_for_binary_classification_estimations(calculator_opts, expected):
    reference, analysis, _ = load_synthetic_car_loan_dataset()
    cbpe = IW(  # type: ignore
        feature_column_names=[
            "car_value",
            "debt_to_income_ratio",
            "loan_length",
            "driver_tenure",
            "salary_range",
            "repaid_loan_on_prev_car",
            "size_of_downpayment"
        ],
        y_true='repaid',
        y_pred='y_pred',
        y_pred_proba='y_pred_proba',
        problem_type='classification_binary',
        metrics=[
            'roc_auc',
            'f1',
            # 'precision',
            # 'recall',
            # 'specificity',
            'accuracy',
            # 'confusion_matrix',
            # 'business_value',
        ],
        chunk_size=5_000,
        **calculator_opts,
    ).fit(reference.head(15_000))
    result = cbpe.estimate(analysis.tail(10_000))
    metric_column_names = [name for metric in result.metrics for name in metric.column_names]
    sut = result.to_df()[[('chunk', 'key')] + [(c, 'value') for c in metric_column_names]]
    sut.columns = [
        'key',
        'estimated_roc_auc',
        'estimated_f1',
        # 'estimated_precision',
        # 'estimated_recall',
        # 'estimated_specificity',
        'estimated_accuracy',
        # 'estimated_true_positive',
        # 'estimated_true_negative',
        # 'estimated_false_positive',
        # 'estimated_false_negative',
        # 'estimated_business_value',
    ]
    print("debug")
    print(sut)
    pd.testing.assert_frame_equal(expected, sut.round(6))


# @pytest.mark.parametrize(
#     'calculator_opts, expected',
#     [
#         (
#             {'chunk_size': 20000},
#             pd.DataFrame(
#                 {
#                     'key': ['[0:19999]', '[20000:39999]', '[40000:59999]'],
#                     'estimated_roc_auc': [0.9092530048158975, 0.8684079311351537, 0.8205039807439959],
#                     'estimated_f1': [0.756401608336434, 0.6937135623882767, 0.632386421613214],
#                     'estimated_precision': [0.7564437378390059, 0.694174192229447, 0.6336288859123612],
#                     'estimated_recall': [0.7564129287764665, 0.6934788458355289, 0.6319310599943714],
#                     'estimated_specificity': [0.8782068281303994, 0.8469556750949159, 0.8172644220189141],
#                     'estimated_accuracy': [0.7564451493123628, 0.6946947603445697, 0.6378557309960986],
#                     'estimated_true_highstreet_card_pred_highstreet_card': [
#                         4976.829215997277,
#                         5148.649186425118,
#                         5412.348045797111,
#                     ],
#                     'estimated_true_highstreet_card_pred_prepaid_card': [
#                         878.1877379091701,
#                         1038.3533241561252,
#                         1250.9260097761653,
#                     ],
#                     'estimated_true_highstreet_card_pred_upmarket_card': [
#                         831.7702766018707,
#                         993.7691398029524,
#                         1109.9706655490413,
#                     ],
#                     'estimated_true_prepaid_card_pred_highstreet_card': [
#                         806.1451187447954,
#                         1140.1932616586546,
#                         1451.431964364007,
#                     ],
#                     'estimated_true_prepaid_card_pred_prepaid_card': [
#                         5180.838942632071,
#                         4134.524656135082,
#                         3326.8467648553315,
#                     ],
#                     'estimated_true_prepaid_card_pred_upmarket_card': [
#                         755.9948957802203,
#                         998.509495865855,
#                         1200.1095251814281,
#                     ],
#                     'estimated_true_upmarket_card_pred_highstreet_card': [
#                         812.0256652579275,
#                         1062.1575519162266,
#                         1263.219989838882,
#                     ],
#                     'estimated_true_upmarket_card_pred_prepaid_card': [
#                         786.9733194587595,
#                         873.1220197087925,
#                         967.2272253685034,
#                     ],
#                     'estimated_true_upmarket_card_pred_upmarket_card': [
#                         4971.234827617909,
#                         4610.7213643311925,
#                         4017.9198092695306,
#                     ],
#                 }
#             ),
#         ),
#         (
#             {'chunk_size': 20000, 'timestamp_column_name': 'timestamp', 'normalize_confusion_matrix': 'true'},
#             pd.DataFrame(
#                 {
#                     'key': ['[0:19999]', '[20000:39999]', '[40000:59999]'],
#                     'estimated_roc_auc': [0.9092530048158975, 0.8684079311351537, 0.8205039807439959],
#                     'estimated_f1': [0.756401608336434, 0.6937135623882767, 0.632386421613214],
#                     'estimated_precision': [0.7564437378390059, 0.694174192229447, 0.6336288859123612],
#                     'estimated_recall': [0.7564129287764665, 0.6934788458355289, 0.6319310599943714],
#                     'estimated_specificity': [0.8782068281303994, 0.8469556750949159, 0.8172644220189141],
#                     'estimated_accuracy': [0.7564451493123628, 0.6946947603445697, 0.6378557309960986],
#                     'estimated_true_highstreet_card_pred_highstreet_card': [
#                         0.7442780881812128,
#                         0.7170050012869645,
#                         0.6962791266676683,
#                     ],
#                     'estimated_true_highstreet_card_pred_prepaid_card': [
#                         0.1313317902358936,
#                         0.14460191393226796,
#                         0.16092713592008898,
#                     ],
#                     'estimated_true_highstreet_card_pred_upmarket_card': [
#                         0.12439012158289371,
#                         0.1383930847807676,
#                         0.1427937374122426,
#                     ],
#                     'estimated_true_prepaid_card_pred_highstreet_card': [
#                         0.11955326034187638,
#                         0.18175544842770236,
#                         0.24277980997563847,
#                     ],
#                     'estimated_true_prepaid_card_pred_prepaid_card': [
#                         0.7683308780213619,
#                         0.6590745693568182,
#                         0.5564788741190233,
#                     ],
#                     'estimated_true_prepaid_card_pred_upmarket_card': [
#                         0.1121158616367618,
#                         0.15916998221547937,
#                         0.20074131590533828,
#                     ],
#                     'estimated_true_upmarket_card_pred_highstreet_card': [
#                         0.1235915933057778,
#                         0.16226052551901615,
#                         0.20216802004274595,
#                     ],
#                     'estimated_true_upmarket_card_pred_prepaid_card': [
#                         0.1197785865673972,
#                         0.13338250761817996,
#                         0.15479680076083163,
#                     ],
#                     'estimated_true_upmarket_card_pred_upmarket_card': [
#                         0.756629820126825,
#                         0.7043569668628038,
#                         0.6430351791964225,
#                     ],
#                 }
#             ),
#         ),
#         (
#             {'chunk_number': 4, 'normalize_confusion_matrix': 'pred'},
#             pd.DataFrame(
#                 {
#                     'key': ['[0:14999]', '[15000:29999]', '[30000:44999]', '[45000:59999]'],
#                     'estimated_roc_auc': [0.9085282712524355, 0.908855836626517, 0.8197227941098104, 0.820357813099581],
#                     'estimated_f1': [0.7550059244451006, 0.7562711250144366, 0.63091155676697, 0.6324244687112559],
#                     'estimated_precision': [
#                         0.755038246904623,
#                         0.7562647262876293,
#                         0.6323547131368327,
#                         0.6335323150520741,
#                     ],
#                     'estimated_recall': [
#                         0.7550277340784216,
#                         0.7562926950204228,
#                         0.6304009454574501,
#                         0.6320155112489632,
#                     ],
#                     'estimated_specificity': [
#                         0.8775094795233379,
#                         0.8781429133214084,
#                         0.8165537125162895,
#                         0.8172408983542975,
#                     ],
#                     'estimated_accuracy': [
#                         0.7550428613792668,
#                         0.7562888217426292,
#                         0.6364205304514962,
#                         0.6375753072973162,
#                     ],
#                     'estimated_true_highstreet_card_pred_highstreet_card': [
#                         0.7546260682147157,
#                         0.7511343683695074,
#                         0.6628383225865804,
#                         0.6651814251770874,
#                     ],
#                     'estimated_true_highstreet_card_pred_prepaid_card': [
#                         0.12922483020709813,
#                         0.12720280190168412,
#                         0.22365956156664257,
#                         0.22578913179209303,
#                     ],
#                     'estimated_true_highstreet_card_pred_upmarket_card': [
#                         0.12747696595643684,
#                         0.12776612448252053,
#                         0.17277613353669485,
#                         0.17660735301820177,
#                     ],
#                     'estimated_true_prepaid_card_pred_highstreet_card': [
#                         0.12118073967907128,
#                         0.1249170750987652,
#                         0.18024418583692642,
#                         0.17798857692081155,
#                     ],
#                     'estimated_true_prepaid_card_pred_prepaid_card': [
#                         0.7554502796336932,
#                         0.7576402255283115,
#                         0.5994574163887797,
#                         0.5998622938235557,
#                     ],
#                     'estimated_true_prepaid_card_pred_upmarket_card': [
#                         0.11748464117810321,
#                         0.11221429055241054,
#                         0.1924554660281669,
#                         0.18783942082621902,
#                     ],
#                     'estimated_true_upmarket_card_pred_highstreet_card': [
#                         0.12419319210621305,
#                         0.12394855653172744,
#                         0.15691749157649315,
#                         0.15682999790210106,
#                     ],
#                     'estimated_true_upmarket_card_pred_prepaid_card': [
#                         0.11532489015920869,
#                         0.1151569725700045,
#                         0.17688302204457784,
#                         0.17434857438435108,
#                     ],
#                     'estimated_true_upmarket_card_pred_upmarket_card': [
#                         0.7550383928654599,
#                         0.7600195849650688,
#                         0.6347684004351383,
#                         0.6355532261555792,
#                     ],
#                 }
#             ),
#         ),
#         (
#             {'chunk_number': 4, 'timestamp_column_name': 'timestamp', 'normalize_confusion_matrix': 'all'},
#             pd.DataFrame(
#                 {
#                     'key': ['[0:14999]', '[15000:29999]', '[30000:44999]', '[45000:59999]'],
#                     'estimated_roc_auc': [0.9085282712524355, 0.908855836626517, 0.8197227941098104, 0.820357813099581],
#                     'estimated_f1': [0.7550059244451006, 0.7562711250144366, 0.63091155676697, 0.6324244687112559],
#                     'estimated_precision': [
#                         0.755038246904623,
#                         0.7562647262876293,
#                         0.6323547131368327,
#                         0.6335323150520741,
#                     ],
#                     'estimated_recall': [
#                         0.7550277340784216,
#                         0.7562926950204228,
#                         0.6304009454574501,
#                         0.6320155112489632,
#                     ],
#                     'estimated_specificity': [
#                         0.8775094795233379,
#                         0.8781429133214084,
#                         0.8165537125162895,
#                         0.8172408983542975,
#                     ],
#                     'estimated_accuracy': [
#                         0.7550428613792668,
#                         0.7562888217426292,
#                         0.6364205304514962,
#                         0.6375753072973162,
#                     ],
#                     'estimated_true_highstreet_card_pred_highstreet_card': [
#                         0.24922783612904678,
#                         0.24847524905663304,
#                         0.2702612787293017,
#                         0.2678907326329857,
#                     ],
#                     'estimated_true_highstreet_card_pred_prepaid_card': [
#                         0.044125972021383776,
#                         0.04231613209929359,
#                         0.06202825174114887,
#                         0.06269411559427118,
#                     ],
#                     'estimated_true_highstreet_card_pred_upmarket_card': [
#                         0.04184643869129968,
#                         0.04299755975918424,
#                         0.05441296365515643,
#                         0.05644371002461729,
#                     ],
#                     'estimated_true_prepaid_card_pred_highstreet_card': [
#                         0.04002195895800795,
#                         0.04132256844267153,
#                         0.0734915627052428,
#                         0.07168193287857484,
#                     ],
#                     'estimated_true_prepaid_card_pred_prepaid_card': [
#                         0.25796108881891844,
#                         0.25204164835908494,
#                         0.16624952347848823,
#                         0.16656176358500735,
#                     ],
#                     'estimated_true_prepaid_card_pred_upmarket_card': [
#                         0.03856629154406535,
#                         0.03776384924723789,
#                         0.0606106414344707,
#                         0.060033478896059596,
#                     ],
#                     'estimated_true_upmarket_card_pred_highstreet_card': [
#                         0.041016871579611966,
#                         0.041002182500695435,
#                         0.06398049189878882,
#                         0.06316066782177283,
#                     ],
#                     'estimated_true_upmarket_card_pred_prepaid_card': [
#                         0.03937960582636446,
#                         0.038308886208288165,
#                         0.04905555811369625,
#                         0.04841078748738816,
#                     ],
#                     'estimated_true_upmarket_card_pred_upmarket_card': [
#                         0.24785393643130169,
#                         0.25577192432691115,
#                         0.1999097282437062,
#                         0.2031228110793231,
#                     ],
#                 }
#             ),
#         ),
#         (
#             {'chunk_period': 'Y', 'timestamp_column_name': 'timestamp'},
#             pd.DataFrame(
#                 {
#                     'key': ['2020', '2021'],
#                     'estimated_roc_auc': [0.8699046556903727, 0.8174976659905601],
#                     'estimated_f1': [0.6959459683194374, 0.6271637037915178],
#                     'estimated_precision': [0.696279612597813, 0.6275707355339551],
#                     'estimated_recall': [0.6957620347508907, 0.6272720458900231],
#                     'estimated_specificity': [0.8480220572478717, 0.8145095377877009],
#                     'estimated_accuracy': [0.6967957612985849, 0.6305270354546132],
#                     'estimated_true_highstreet_card_pred_highstreet_card': [15431.207920621628, 106.61852759787631],
#                     'estimated_true_highstreet_card_pred_prepaid_card': [3140.1950482057946, 27.27202363566655],
#                     'estimated_true_highstreet_card_pred_upmarket_card': [2911.0243109194275, 24.485771034437157],
#                     'estimated_true_prepaid_card_pred_highstreet_card': [3369.0309742564546, 28.73937051100256],
#                     'estimated_true_prepaid_card_pred_prepaid_card': [12568.980575116106, 73.22978850637857],
#                     'estimated_true_prepaid_card_pred_upmarket_card': [2927.072726648623, 27.541190178880235],
#                     'estimated_true_upmarket_card_pred_highstreet_card': [3111.761105121915, 25.642101891121143],
#                     'estimated_true_upmarket_card_pred_prepaid_card': [2605.8243766781006, 21.49818785795489],
#                     'estimated_true_upmarket_card_pred_upmarket_card': [13514.90296243195, 84.97303878668261],
#                 }
#             ),
#         ),
#         (
#             {},
#             pd.DataFrame(
#                 {
#                     'key': [
#                         '[0:5999]',
#                         '[6000:11999]',
#                         '[12000:17999]',
#                         '[18000:23999]',
#                         '[24000:29999]',
#                         '[30000:35999]',
#                         '[36000:41999]',
#                         '[42000:47999]',
#                         '[48000:53999]',
#                         '[54000:59999]',
#                     ],
#                     'estimated_roc_auc': [
#                         0.9070850078291697,
#                         0.9099949916410729,
#                         0.9100049015532864,
#                         0.9091525470654199,
#                         0.9072366448743271,
#                         0.8196065429712586,
#                         0.8203484506082215,
#                         0.8192193154831209,
#                         0.8194977218687874,
#                         0.8216746926871311,
#                     ],
#                     'estimated_f1': [
#                         0.7533014808638749,
#                         0.7564216285126095,
#                         0.7581655498090148,
#                         0.7565574256686872,
#                         0.7536178781761181,
#                         0.6309845876312757,
#                         0.6314817817562323,
#                         0.6305520915509012,
#                         0.6317356567785939,
#                         0.6334434546737131,
#                     ],
#                     'estimated_precision': [
#                         0.7533705392643878,
#                         0.7564117249294325,
#                         0.758189598004742,
#                         0.7565615847700302,
#                         0.7536066338250612,
#                         0.6320478731185537,
#                         0.632902872215884,
#                         0.6320206664159113,
#                         0.6327414423931249,
#                         0.6349486020523588,
#                     ],
#                     'estimated_recall': [
#                         0.7532927299604006,
#                         0.756484874870973,
#                         0.7581945446990431,
#                         0.7565540393358208,
#                         0.7536741378197004,
#                         0.6306782567019867,
#                         0.6308507454911164,
#                         0.6299485723087591,
#                         0.6315005643336115,
#                         0.6328910840233342,
#                     ],
#                     'estimated_specificity': [
#                         0.876648985916452,
#                         0.8781935469456502,
#                         0.87910164279675,
#                         0.8783467614315459,
#                         0.8767972368373717,
#                         0.816629841587921,
#                         0.8166384221108975,
#                         0.8163342736347389,
#                         0.8167795549189886,
#                         0.8180293638991758,
#                     ],
#                     'estimated_accuracy': [
#                         0.7533903547412437,
#                         0.7564140260171383,
#                         0.7582062911442542,
#                         0.7566888307842633,
#                         0.7536297051178407,
#                         0.6358257165904244,
#                         0.6366025073789935,
#                         0.6367168031955528,
#                         0.6365172577468735,
#                         0.6393273094601863,
#                     ],
#                     'estimated_true_highstreet_card_pred_highstreet_card': [
#                         1483.745037516118,
#                         1536.2546154566053,
#                         1486.1512390473335,
#                         1455.1117469508827,
#                         1504.2836388142573,
#                         1581.5006283773678,
#                         1619.4221852490452,
#                         1653.916785154108,
#                         1596.0668735461204,
#                         1621.3736981076686,
#                     ],
#                     'estimated_true_highstreet_card_pred_prepaid_card': [
#                         271.9744616336458,
#                         263.3288788018858,
#                         255.36687592730394,
#                         249.4490435511216,
#                         256.51230189620316,
#                         373.19858748671334,
#                         376.5016769489258,
#                         379.92027913064413,
#                         383.2996831232405,
#                         357.9152833417768,
#                     ],
#                     'estimated_true_highstreet_card_pred_upmarket_card': [
#                         249.77244098451774,
#                         249.25341402994002,
#                         256.5894445268087,
#                         248.14404310496627,
#                         268.90063411102597,
#                         336.40636999479034,
#                         321.1640326687466,
#                         329.70510362377274,
#                         338.73618885526093,
#                         336.8384100540352,
#                     ],
#                     'estimated_true_prepaid_card_pred_highstreet_card': [
#                         249.18645665281267,
#                         234.635939041771,
#                         241.34496258349301,
#                         243.99437206824282,
#                         251.00618066387275,
#                         426.16695555097976,
#                         444.34831788068584,
#                         437.82379051045245,
#                         436.76196316220245,
#                         432.5014066529442,
#                     ],
#                     'estimated_true_prepaid_card_pred_prepaid_card': [
#                         1570.046457210577,
#                         1517.6502407889316,
#                         1541.0740605507428,
#                         1544.8307224347122,
#                         1476.439576685086,
#                         1000.6602945021018,
#                         1015.9002964606179,
#                         990.2540537898107,
#                         1008.1898500978498,
#                         977.1648111020529,
#                     ],
#                     'estimated_true_prepaid_card_pred_upmarket_card': [
#                         227.67692529471515,
#                         228.16728611276778,
#                         224.39810820574257,
#                         236.66544157504953,
#                         228.04435068127367,
#                         373.80025334213235,
#                         351.54340476695654,
#                         359.16491614682934,
#                         364.41698830746793,
#                         360.7362423945684,
#                     ],
#                     'estimated_true_upmarket_card_pred_highstreet_card': [
#                         243.06850583106933,
#                         254.1094455016238,
#                         238.50379836917327,
#                         249.89388098087457,
#                         244.71018052186997,
#                         378.3324160716525,
#                         385.22949687026846,
#                         390.2594243354395,
#                         372.1711632916771,
#                         381.12489523938723,
#                     ],
#                     'estimated_true_upmarket_card_pred_prepaid_card': [
#                         237.97908115577718,
#                         232.0208804091826,
#                         234.55906352195305,
#                         231.72023401416573,
#                         229.04812141871074,
#                         297.14111801118486,
#                         301.59802659045613,
#                         282.82566707954516,
#                         285.5104667789098,
#                         294.91990555617025,
#                     ],
#                     'estimated_true_upmarket_card_pred_upmarket_card': [
#                         1466.550633720767,
#                         1484.5792998572922,
#                         1522.0124472674486,
#                         1540.1905153199841,
#                         1541.0550152077003,
#                         1232.7933766630772,
#                         1184.292562564297,
#                         1176.129980229398,
#                         1214.8468228372712,
#                         1237.4253475513965,
#                     ],
#                 }
#             ),
#         ),
#         (
#             {'timestamp_column_name': 'timestamp'},
#             pd.DataFrame(
#                 {
#                     'key': [
#                         '[0:5999]',
#                         '[6000:11999]',
#                         '[12000:17999]',
#                         '[18000:23999]',
#                         '[24000:29999]',
#                         '[30000:35999]',
#                         '[36000:41999]',
#                         '[42000:47999]',
#                         '[48000:53999]',
#                         '[54000:59999]',
#                     ],
#                     'estimated_roc_auc': [
#                         0.9070850078291697,
#                         0.9099949916410729,
#                         0.9100049015532864,
#                         0.9091525470654199,
#                         0.9072366448743271,
#                         0.8196065429712586,
#                         0.8203484506082215,
#                         0.8192193154831209,
#                         0.8194977218687874,
#                         0.8216746926871311,
#                     ],
#                     'estimated_f1': [
#                         0.7533014808638749,
#                         0.7564216285126095,
#                         0.7581655498090148,
#                         0.7565574256686872,
#                         0.7536178781761181,
#                         0.6309845876312757,
#                         0.6314817817562323,
#                         0.6305520915509012,
#                         0.6317356567785939,
#                         0.6334434546737131,
#                     ],
#                     'estimated_precision': [
#                         0.7533705392643878,
#                         0.7564117249294325,
#                         0.758189598004742,
#                         0.7565615847700302,
#                         0.7536066338250612,
#                         0.6320478731185537,
#                         0.632902872215884,
#                         0.6320206664159113,
#                         0.6327414423931249,
#                         0.6349486020523588,
#                     ],
#                     'estimated_recall': [
#                         0.7532927299604006,
#                         0.756484874870973,
#                         0.7581945446990431,
#                         0.7565540393358208,
#                         0.7536741378197004,
#                         0.6306782567019867,
#                         0.6308507454911164,
#                         0.6299485723087591,
#                         0.6315005643336115,
#                         0.6328910840233342,
#                     ],
#                     'estimated_specificity': [
#                         0.876648985916452,
#                         0.8781935469456502,
#                         0.87910164279675,
#                         0.8783467614315459,
#                         0.8767972368373717,
#                         0.816629841587921,
#                         0.8166384221108975,
#                         0.8163342736347389,
#                         0.8167795549189886,
#                         0.8180293638991758,
#                     ],
#                     'estimated_accuracy': [
#                         0.7533903547412437,
#                         0.7564140260171383,
#                         0.7582062911442542,
#                         0.7566888307842633,
#                         0.7536297051178407,
#                         0.6358257165904244,
#                         0.6366025073789935,
#                         0.6367168031955528,
#                         0.6365172577468735,
#                         0.6393273094601863,
#                     ],
#                     'estimated_true_highstreet_card_pred_highstreet_card': [
#                         1483.745037516118,
#                         1536.2546154566053,
#                         1486.1512390473335,
#                         1455.1117469508827,
#                         1504.2836388142573,
#                         1581.5006283773678,
#                         1619.4221852490452,
#                         1653.916785154108,
#                         1596.0668735461204,
#                         1621.3736981076686,
#                     ],
#                     'estimated_true_highstreet_card_pred_prepaid_card': [
#                         271.9744616336458,
#                         263.3288788018858,
#                         255.36687592730394,
#                         249.4490435511216,
#                         256.51230189620316,
#                         373.19858748671334,
#                         376.5016769489258,
#                         379.92027913064413,
#                         383.2996831232405,
#                         357.9152833417768,
#                     ],
#                     'estimated_true_highstreet_card_pred_upmarket_card': [
#                         249.77244098451774,
#                         249.25341402994002,
#                         256.5894445268087,
#                         248.14404310496627,
#                         268.90063411102597,
#                         336.40636999479034,
#                         321.1640326687466,
#                         329.70510362377274,
#                         338.73618885526093,
#                         336.8384100540352,
#                     ],
#                     'estimated_true_prepaid_card_pred_highstreet_card': [
#                         249.18645665281267,
#                         234.635939041771,
#                         241.34496258349301,
#                         243.99437206824282,
#                         251.00618066387275,
#                         426.16695555097976,
#                         444.34831788068584,
#                         437.82379051045245,
#                         436.76196316220245,
#                         432.5014066529442,
#                     ],
#                     'estimated_true_prepaid_card_pred_prepaid_card': [
#                         1570.046457210577,
#                         1517.6502407889316,
#                         1541.0740605507428,
#                         1544.8307224347122,
#                         1476.439576685086,
#                         1000.6602945021018,
#                         1015.9002964606179,
#                         990.2540537898107,
#                         1008.1898500978498,
#                         977.1648111020529,
#                     ],
#                     'estimated_true_prepaid_card_pred_upmarket_card': [
#                         227.67692529471515,
#                         228.16728611276778,
#                         224.39810820574257,
#                         236.66544157504953,
#                         228.04435068127367,
#                         373.80025334213235,
#                         351.54340476695654,
#                         359.16491614682934,
#                         364.41698830746793,
#                         360.7362423945684,
#                     ],
#                     'estimated_true_upmarket_card_pred_highstreet_card': [
#                         243.06850583106933,
#                         254.1094455016238,
#                         238.50379836917327,
#                         249.89388098087457,
#                         244.71018052186997,
#                         378.3324160716525,
#                         385.22949687026846,
#                         390.2594243354395,
#                         372.1711632916771,
#                         381.12489523938723,
#                     ],
#                     'estimated_true_upmarket_card_pred_prepaid_card': [
#                         237.97908115577718,
#                         232.0208804091826,
#                         234.55906352195305,
#                         231.72023401416573,
#                         229.04812141871074,
#                         297.14111801118486,
#                         301.59802659045613,
#                         282.82566707954516,
#                         285.5104667789098,
#                         294.91990555617025,
#                     ],
#                     'estimated_true_upmarket_card_pred_upmarket_card': [
#                         1466.550633720767,
#                         1484.5792998572922,
#                         1522.0124472674486,
#                         1540.1905153199841,
#                         1541.0550152077003,
#                         1232.7933766630772,
#                         1184.292562564297,
#                         1176.129980229398,
#                         1214.8468228372712,
#                         1237.4253475513965,
#                     ],
#                 }
#             ),
#         ),
#     ],
#     ids=[
#         'size_based_without_timestamp',
#         'size_based_with_timestamp',
#         'count_based_without_timestamp',
#         'count_based_with_timestamp',
#         'period_based_with_timestamp',
#         'default_without_timestamp',
#         'default_with_timestamp',
#     ],
# )
# def test_cbpe_for_multiclass_classification_with_timestamps(calculator_opts, expected):
#     ref_df, ana_df, _ = load_synthetic_multiclass_classification_dataset()
#     cbpe = CBPE(
#         y_pred_proba={
#             'upmarket_card': 'y_pred_proba_upmarket_card',
#             'highstreet_card': 'y_pred_proba_highstreet_card',
#             'prepaid_card': 'y_pred_proba_prepaid_card',
#         },
#         y_pred='y_pred',
#         y_true='y_true',
#         problem_type='classification_multiclass',
#         metrics=['roc_auc', 'f1', 'precision', 'recall', 'specificity', 'accuracy', 'confusion_matrix'],
#         **calculator_opts,
#     ).fit(ref_df)
#     result = cbpe.estimate(ana_df)
#     column_names = [(m.name, 'value') for m in result.metrics]
#     column_names = [c for c in column_names if c[0] != 'confusion_matrix']
#     column_names += [
#         ('true_highstreet_card_pred_highstreet_card', 'value'),
#         ('true_highstreet_card_pred_prepaid_card', 'value'),
#         ('true_highstreet_card_pred_upmarket_card', 'value'),
#         ('true_prepaid_card_pred_highstreet_card', 'value'),
#         ('true_prepaid_card_pred_prepaid_card', 'value'),
#         ('true_prepaid_card_pred_upmarket_card', 'value'),
#         ('true_upmarket_card_pred_highstreet_card', 'value'),
#         ('true_upmarket_card_pred_prepaid_card', 'value'),
#         ('true_upmarket_card_pred_upmarket_card', 'value'),
#     ]
#     sut = result.filter(period='analysis').to_df()[[('chunk', 'key')] + column_names]
#     sut.columns = [
#         'key',
#         'estimated_roc_auc',
#         'estimated_f1',
#         'estimated_precision',
#         'estimated_recall',
#         'estimated_specificity',
#         'estimated_accuracy',
#         'estimated_true_highstreet_card_pred_highstreet_card',
#         'estimated_true_highstreet_card_pred_prepaid_card',
#         'estimated_true_highstreet_card_pred_upmarket_card',
#         'estimated_true_prepaid_card_pred_highstreet_card',
#         'estimated_true_prepaid_card_pred_prepaid_card',
#         'estimated_true_prepaid_card_pred_upmarket_card',
#         'estimated_true_upmarket_card_pred_highstreet_card',
#         'estimated_true_upmarket_card_pred_prepaid_card',
#         'estimated_true_upmarket_card_pred_upmarket_card',
#     ]

#     pd.testing.assert_frame_equal(expected, sut)


# @pytest.mark.parametrize(
#     'metric_cls',
#     [
#         BinaryClassificationAUROC,
#         BinaryClassificationF1,
#         BinaryClassificationPrecision,
#         BinaryClassificationRecall,
#         BinaryClassificationSpecificity,
#         BinaryClassificationAccuracy,
#         BinaryClassificationConfusionMatrix,
#     ],
# )
# def test_method_logs_warning_when_lower_threshold_is_overridden_by_metric_limits(caplog, metric_cls):
#     reference, _, _ = load_synthetic_binary_classification_dataset()

#     # TODO: move this from CBPE to metrics
#     # workaround to deal with functionality outside of Metrics classes
#     reference['uncalibrated_y_pred_proba'] = reference['y_pred_proba']

#     metric = metric_cls(
#         y_pred_proba='y_pred_proba',
#         y_pred='y_pred',
#         y_true='work_home_actual',
#         problem_type='classification_binary',
#         chunker=DefaultChunker(),
#         threshold=ConstantThreshold(lower=-1),
#     )
#     metric.fit(reference)

#     assert (
#         f'{metric.display_name} lower threshold value -1 overridden by '
#         f'lower threshold value limit {metric.lower_threshold_value_limit}' in caplog.messages
#     )
